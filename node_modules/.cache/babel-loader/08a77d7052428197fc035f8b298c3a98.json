{"remainingRequest":"/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/babel-loader/lib/index.js!/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/mihailovsannikov/Desktop/Currency/C/currency-app/src/components/Convert.vue?vue&type=template&id=55413e33","dependencies":[{"path":"/Users/mihailovsannikov/Desktop/Currency/C/currency-app/src/components/Convert.vue","mtime":1637001644719},{"path":"/Users/mihailovsannikov/Desktop/Currency/C/currency-app/babel.config.js","mtime":1636935503454},{"path":"/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mihailovsannikov/Desktop/Currency/C/currency-app/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/mihailovsannikov/Desktop/Currency/C/currency-app/src/components/Convert.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <v-row>\n        <v-col cols=\"10\" md=\"12\" lg=\"9\" xl=\"6\" class=\"bg--light mx-auto\">\n          <h1 class=\"text-center mb-4\">Currency Converter</h1>\n          <v-row justify=\"space-between\" no-gutters>\n            <v-col cols=\"12\" md=\"5\">\n              <v-row no-gutters>\n                <v-col class=\"px-1\" cols=\"3\">\n                  <v-select @change=\"convert\" v-model=\"selected[0]\" :items=\"countries\" label=\"I have\"></v-select>\n                </v-col>\n\n                <v-col class=\"px-1\" cols=\"9\">\n                  <v-text-field @input=\"convert\" v-model=\"inputed\" :rules=\"[rules.onlyNumbers]\"></v-text-field>\n                </v-col>\n              </v-row>\n            </v-col>\n\n            <v-col cols=\"2\" offset=\"5\" offset-md=\"0\" class=\"d-flex justify-center align-center\">\n              <img class=\"exchange\" :src=\"require('./assets/icons/exchange.png')\" alt=\"Exchange\">\n            </v-col>\n\n            <v-col cols=\"12\" md=\"5\">\n              <v-row no-gutters>\n                <v-col class=\"px-1\" cols=\"9\">\n                  <v-text-field v-model=\"result\" type=\"number\" readonly></v-text-field>\n                </v-col>\n\n                <v-col class=\"px-1\" cols=\"3\">\n                  <v-select @change=\"convert\" v-model=\"selected[1]\" :items=\"countries\" label=\"I want to buy\"></v-select>\n                </v-col>\n              </v-row>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\n\nconst axios = require('axios').default;\n\nexport default {\n\n  name: 'Convert',\n\n  data() {\n    return {\n      valutes: {},\n      selected: ['RUB', 'USD'],\n      inputed: \"\",\n      result: null,\n      countries: ['RUB'],\n      rules: {\n        onlyNumbers: (value) => {\n          const pattern = /^\\d+$/.test(value);\n\n          if (!pattern) this.inputed = this.inputed.replace(/\\D/g, '');\n\n          return true;\n        }\n      }\n    }\n  },\n\n  methods: {\n    convert() {\n      // Default valute values / RUB\n      let defaultValute = {\n        Value: 1,\n        Nominal: 1\n      };\n\n      // First selected valute details\n      let firstValute = this.valutes[this.selected[0]] ?? defaultValute,\n          firstValuteValue = firstValute.Value * Number(this.inputed),\n          firstValuteNominal = firstValute.Nominal;\n\n      // Second selected valute details\n      let secondValute = this.valutes[this.selected[1]] ?? defaultValute,\n          secondValuteValue = secondValute.Value,\n          secondValuteNominal = secondValute.Nominal;\n\n      // Result calculating\n      let result = (firstValuteValue / firstValuteNominal) / (secondValuteValue / secondValuteNominal);\n\n      // Rounding to ten thousandths\n      this.result = result ? Math.floor(result * 10000) / 10000 : null;\n    }\n  },\n\n  mounted() {\n    // Request to API URL, getting response\n    axios\n      .get('https://www.cbr-xml-daily.ru/daily_json.js')\n      .then(response => {\n        this.valutes = response.data.Valute;\n        // Adding all charCodes to array\n        for (let code in response.data.Valute) {\n          this.countries.push(code)\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  },\n};\n\n</script>\n\n<style lang=\"scss\">\n\n</style>"],"sourceRoot":""}]}